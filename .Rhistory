seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect=c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect >=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Zane")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(my_data,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flag[,19:23]
flag_shapes<-flags[,19:23]
lapply(flag_colors,range)
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_val
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,prob=c(0.3,0.7),replace=T)
flips<-sample(c(0,1),100,prob=c(0.3,0.7),replace=TRUE)
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(y2))
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
rpois(5,2)
set.seed(1)
rpois(5,2)
Rprof()
x<-setNames(1:5,letters[1:5])
x
x[0]
x[,0]
x[]
x<-setNames(1:6,letters[1:6])
x
x[]
dim(x)<-c(2,3)
x
x[0,]
h<-function(){
y<-2
i<-function(){
z<-3
c(x,y,z)
}
i()
}
x<-1
h<-function(){
y<-2
i<-function(){
z<-3
c(x,y,z)
}
i()
}
h()
rm(x,h)
install.packages("pryr")
library(pryr)
search()
where("aov")
environment(aov)
plus <- function(x) {
function(y) x + y
}
plus_one <- plus(1)
environment(plus_one)
environment(plus)
environment(parent.env(plus_one))
parent.env(environment(plus_one))
search()
environment()
parent.frame()
e2 <- new.env(parent = emptyenv())
e2
search()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?manip
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
f!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(plyr)
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
summarise(by_package,mean(size))
submit()
submit()
submit()
bye()
sriwl()
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
reset()
submit()
submit()
submit()
conflicts()
detach(package:plyr,unload=T)
submit()
pack_sum
bye()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
day(this_day)
wday(this_day)
wday(this_day,label=T)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1985-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19-20-12")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,now())
this_moment<-update(this_moment,hours=10,minutes=16,seconds=0)
this_moment
?now
nyc<-now(tzone="America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,tzone="Asia/Hong_Kong")
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008")
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
source("http://sna.stanford.edu/setup.R")
sample_df <- data.frame(a = 1:5, b = 5:1, c = c(5, 3, 1, 4, 1))
sample_df <- data.frame(a = 1:5, b = 5:1, c = c(5, 3, 1, 4, 1))
subset2 <- function(x, condition) {
condition_call <- substitute(condition)
r <- eval(condition_call, x, parent.frame())
x[r, ]
}
scramble <- function(x) x[sample(nrow(x)), ]
subscramble <- function(x, condition) {
scramble(subset2(x, condition))
}
subscramble(sample_df, a >= 4)
subscramble(sample_df, a >= 4)
debugonce(subset2)
subscramble(sample_df, a >= 4)
debugonce(subset2)
subscramble(sample_df, a >= 4)
q
load("~/Documents/SPH/Project 1/data/exploration.RData")
library(plyr)
install.packages("shiny")
R.version()
R.version
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality <- transform(airquality,Month=factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month
)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth="loess")
qplot(votes, rating, data = movies) + geom.smooth()
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
install.packages("icd9")
dir
getwd
getwd()
wd <- "/Users/zanelim/Documents/Coursera/Git/ReproducibleResearch/Assignment1"
setwd(wd)
ls()
dir()
wd <- "/Users/zanelim/Documents/Coursera/Git/ReproducibleResearch/Assignment1/
RepData_PeerAssessment1"
setwd(wd)
setwd("~")
ls()
dir()
setwd(wd)
wd
wd <- "/Users/zanelim/Documents/Coursera/Git/ReproducibleResearch/Assignment1/RepData_PeerAssessment1"
setwd(wd)
dir()
dat0 <- read.csv("activity.csv")
dat0$date <- as.Date(dat0$date,"%Y-%m-%d")
hist(dat0$steps)
range(dat0$date)
dat1 <- aggregate(steps~date,dat0,sum,na.rm=TRUE)
hist(dat1$steps)
hist(dat1$steps,main="Histogram of total steps per day",xlab="No of Steps")
mean(dat1$steps)
median(dat1$steps)
dat2 <- aggregate(steps~interval,dat0,mean,na.rm=TRUE)
288*5
range(dat0$interval)
unique(dat0$interval)
plot(interval,steps,main="Average Daily Activity Pattern",xlab="5-Minute Interval",
ylab="Average No of Steps")
plot(dat2$interval,dat2$steps,main="Average Daily Activity Pattern",
xlab="5-Minute Interval",ylab="Average No of Steps")
plot(dat2$interval,dat2$steps,main="Average Daily Activity Pattern",
xlab="5-Minute Interval",ylab="Average No of Steps",type="l")
dat2$interval[which(dat2$steps==max(dat2$steps)])
dat2$interval[which(dat2$steps==max(dat2$steps)]
dat2$interval[which(dat2$steps==max(dat2$steps))]
sum(is.na(dat0$steps))
sum(is.na(dat0))
sweep
?impute
tmp<-  merge(dat0[is.na(dat0$steps),],dat2,by="interval",all.x=TRUE)[["steps"]]
tmp<-  merge(dat0[is.na(dat0$steps),"interval"],dat2,all.x=TRUE)[["steps"]]
View(dat2)
tmp<-  merge(dat0[is.na(dat0$steps),"interval",drop=F],dat2)[["steps"]]
tmp<-  merge(dat0[is.na(dat0$steps),"interval",drop=F],dat2)
dat0$steps[is.na(dat0$steps)] <-
merge(dat0[is.na(dat0$steps),"interval",drop=F],dat2)[["steps"]]
tmp<-dat0$steps[is.na(dat0$steps)]
tmp<-dat0[is.na(dat0$steps)]
tmp<-dat0[is.na(dat0$steps),]
dat0 <- read.csv("activity.csv")
dat0$date <- as.Date(dat0$date,"%Y-%m-%d")
tmp<-dat0[is.na(dat0$steps),]
View(dat2)
View(tmp)
tmp <-  merge(dat0[is.na(dat0$steps),"interval",drop=F],dat2)[["steps"]]
tmp <-  merge(dat0[is.na(dat0$steps),],dat2,by="interval")[["y.steps"]]
tmp <-  merge(dat0[is.na(dat0$steps),],dat2,by="interval")
tmp <-  merge(dat0[is.na(dat0$steps),],dat2,by="interval")[["steps.y"]]
tmp <-  merge(dat0[is.na(dat0$steps),],dat2,by="interval",all.x=TRUE)[["steps.y"]]
tmp <-  merge(dat0[is.na(dat0$steps),],dat2,by="interval",all.x=TRUE)
View(tmp)
tmp <- dat2[match(dat0$interval[is.na(dat0$steps)],
dat2$interval),"interval"]
tmp <- dat2[match(dat0$interval[is.na(dat0$steps)],
dat2$interval),"steps"]
tmp <-  dat0[is.na(dat0$steps)]
tmp <-  dat0[is.na(dat0$steps),]
View(tmp)
tmp2<- dat2[match(dat0$interval[is.na(dat0$steps)],
dat2$interval),"steps"]
View(dat2)
tmp2
dat0$steps[is.na(dat0$steps)] <- dat2[match(dat0$interval[is.na(dat0$steps)],
dat2$interval),"steps"]
dat0 <- read.csv("activity.csv")
dat0$date <- as.Date(dat0$date,"%Y-%m-%d")
dat3 <- dat0
dat3$steps[is.na(dat3$steps)] <- dat2[match(dat0$interval[is.na(dat0$steps)],
dat2$interval),"steps"]
sum(is.na(dat3))
dat4 <- aggregate(steps~date,dat3,sum,na.rm=TRUE)
hist(dat4$steps,main="Histogram of Total Steps per Day",xlab="No of Steps")
mean(dat4$steps)
median(dat4$steps)
mean(dat1$steps)
median(dat1$steps)
?weekday
?weekdays
head(weekdays(dat3$date))
dat3$daytype <- ifelse(weekdays(dat3$date) %in% c("Saturday","Sunday"),
"weekend","weekday")
View(dat3)
dat3$daytype <- as.factor(dat3$daytype)
library(lattice)
dat5 <- aggregate(steps~daytype,dat3,mean,na.rm=TRUE)
rm(dat5)
xyplot(steps ~ interval | daytype, data=dat3, type="l")
dat5 <- aggregate(steps~interval,dat3,mean,na.rm=TRUE)
dat5 <- aggregate(steps~interval+daytype,dat3,mean,na.rm=TRUE)
xyplot(steps ~ interval | daytype, data=dat5, type="l")
xyplot(steps ~ interval | daytype, data=dat5, type="l", layout=c(2,1))
xyplot(steps ~ interval | daytype, data=dat5, type="l", layout=c(1,2))
xyplot(steps ~ interval | daytype, data=dat5, type="l", layout=c(1,2),
xlab="Interval", ylab="No of Steps")
